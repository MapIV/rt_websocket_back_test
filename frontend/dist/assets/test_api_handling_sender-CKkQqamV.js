import{P as N}from"./pcdViewer-TpExixiN.js";import{d as O,r as g,b as V,e as E,c as I,a as d,g as $,h as j,f as J,t as W,u as F,F as P,i as R,o as S}from"./index-EXa_LSr2.js";const K=O({__name:"test_api_handling_sender",setup(q){const o=g({video_stream:null,pcdfile:null}),w=g(null),B=g(null);g(null),g(null),g([]);let _=null,D=null,T=g("");async function x(e="jpg"){_=await navigator.mediaDevices.getUserMedia({video:!0});const t=document.getElementById("myCam");t.srcObject=_,await t.play();const a=document.createElement("canvas"),n=a.getContext("2d");a.width=t.videoWidth||640,a.height=t.videoHeight||480,D=window.setInterval(async()=>{n.drawImage(t,0,0,a.width,a.height),a.toBlob(async i=>{if(!i)return;const c=await i.arrayBuffer(),f=Date.now(),y={format:e,send_timestamp:f},s=new TextEncoder().encode(JSON.stringify(y)),l=new Uint8Array(new Uint32Array([s.length]).buffer),r=new Uint8Array(l.length+s.length+c.byteLength);r.set(l,0),r.set(s,4),r.set(new Uint8Array(c),4+s.length),o.value.video_stream?.send(r)},`image/${e}`)},200)}function L(){_?.getTracks().forEach(e=>e.stop()),D!==null&&clearInterval(D)}function U(e,t){o.value[e]||(o.value[e]=new WebSocket("ws://localhost:8888/ws/webcamera/sender"),o.value[e].onopen=()=>{console.log("Websocket connected"),console.log("webcamera")},o.value[e].onmessage=async a=>{try{e==="video_stream"&&await A(a,e,t)}catch(n){console.error("Error parsing message: "+n)}},o.value[e].onclose=()=>{console.log("Websocket closed")},o.value[e].onerror=a=>{console.error("Websocket error: "+a)})}function k(e,t){o.value[e]&&o.value[e].send(JSON.stringify({type:"request_data",topic:e,path:t}))}async function A(e,t,a){const n=e.data;if(console.log("received video time: ",new Date().getTime()),n.byteLength===0){console.log("Empty or invalid frame received, skipping update.");return}const i=Date.now(),c=await n.slice(0,4).arrayBuffer(),f=new DataView(c).getUint32(0,!0),y=await n.slice(4,4+f).arrayBuffer(),s=new TextDecoder().decode(y),l=JSON.parse(s),r=l.send_timestamp,u=l.receive_timestamp,m=i-r,p=u-r,v=i-u;console.log("Video timestamps:",{sendTs:r,receiveTs:u,now:i}),console.log(`Total: ${m}ms | Server: ${p}ms | Client: ${v}ms`),T.value=`RTT: ${m}ms (Server: ${p}ms, Client: ${v}ms)`;const h=await n.slice(4+f).arrayBuffer(),b=l.format==="png"?"image/png":"image/jpeg",C=new Blob([h],{type:b});B.value=URL.createObjectURL(C)}async function M(e,t,a){console.log("Received PCD file time: ",new Date().getTime());const n=await e.data.arrayBuffer(),i=n.slice(0,4),c=new DataView(i).getInt32(0,!0);console.log("headerLength : ",c);const f=n.slice(4,4+c),y=new TextDecoder("utf-8").decode(f),s=JSON.parse(y);console.log("header : ",s);const l=s.points_length,r=s.field_length,u=s.fields,m=4+c,p=n.slice(m,m+l),v=new Float32Array(p);let h=new Float32Array(0);if(r>0){const b=m+l,C=n.slice(b,b+r);h=new Float32Array(C)}console.log("fieldData.length : ",h.length),console.log("points.length : ",v.length),console.log("fields : ",u),w.value&&(h.length>0?w.value.createPointCloud(v,u,h):w.value.createPointCloud(v,u)),console.log("finish create pcd time : ",new Date().getTime()),k(t,a)}async function H(e,t,a){const n=JSON.parse(e.data);console.log("Received JSON data:",n),console.log("header:",n.header),console.log("data:",n.data),T.value=n.data,k(t,a)}return V(()=>{U("video_stream","webcamera"),x("jpg")}),E(()=>{if(o.value)for(const e in o.value)o.value[e]&&o.value[e]?.close()}),(e,t)=>{const a=R("v-img");return S(),I(P,null,[t[0]||(t[0]=d("h1",null,"test2",-1)),t[1]||(t[1]=d("video",{id:"myCam",width:"320",height:"240",autoplay:"",muted:""},null,-1)),t[2]||(t[2]=d("video",{id:"streamVideo",width:"320",height:"240",autoplay:"",controls:""},null,-1)),t[3]||(t[3]=d("canvas",{id:"videoCanvas",width:"1000",height:"100"},null,-1)),B.value?(S(),$(a,{key:0,src:B.value,width:"1000"},null,8,["src"])):j("",!0),t[4]||(t[4]=d("h1",null,"test1",-1)),d("div",null,W(F(T)),1),d("button",{onClick:L}),t[5]||(t[5]=d("h1",null,"test2",-1)),J(N,{ref_key:"viewer",ref:w},null,512)],64)}}});export{K as default};
