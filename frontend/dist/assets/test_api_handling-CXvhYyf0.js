import{P as A}from"./pcdViewer-TpExixiN.js";import{d as N,r as i,b as P,e as R,c as V,a,f as $,t as O,u as j,F as E,o as F}from"./index-EXa_LSr2.js";const J="api.robot-controller.map4.jp",z=N({__name:"test_api_handling",setup(U){const o=i({video_stream:null,pcdfile:null}),w=i(null);i(null),i(null),i(null),i([]);let B=!1,D=i("");function C(){}function L(e,t){o.value[e]||(o.value[e]=new WebSocket(`wss://${J}/ws/webcamera`),o.value[e].onopen=()=>{console.log("Websocket connected"),console.log("webcamera"),T(e,t)},o.value[e].onmessage=async s=>{console.log("Received message:",s.data),console.log("topic:",e);try{e==="video_stream"&&await _(s,e,t)}catch(n){console.error("Error parsing message: "+n)}},o.value[e].onclose=()=>{console.log("Websocket closed")},o.value[e].onerror=s=>{console.error("Websocket error: "+s)})}function T(e,t){o.value[e]&&o.value[e].send(JSON.stringify({type:"request_data",topic:e,path:t}))}async function _(e,t,s){if(e.data.byteLength===0||!(e.data instanceof Blob)||B)return;B=!0;const n=Date.now(),v=await e.data.arrayBuffer(),l=v.slice(0,4),p=new DataView((l instanceof ArrayBuffer,l)).getUint32(0,!0),y=v.slice(4,4+p),c=new TextDecoder().decode((y instanceof ArrayBuffer,y)),d=JSON.parse(c),u=d.send_timestamp,r=d.receive_timestamp,f=n-u,h=r-u,g=n-r;console.log("Video timestamps:",{sendTs:u,receiveTs:r,now:n}),console.log(`Total: ${f}ms | Server: ${h}ms | Client: ${g}ms`),D.value=`RTT: ${f}ms (Server: ${h}ms, Client: ${g}ms)`;const m=await v.slice(4+p),b=d.format==="png"?"image/png":"image/jpeg",S=new Blob([m],{type:b}),x=URL.createObjectURL(S),k=document.getElementById("imgTest");k&&(k.src=x),console.log("topic,path",t,s),B=!1}async function W(e,t,s){console.log("Received PCD file time: ",new Date().getTime());const n=await e.data.arrayBuffer(),v=n.slice(0,4),l=new DataView(v).getInt32(0,!0);console.log("headerLength : ",l);const p=n.slice(4,4+l),y=new TextDecoder("utf-8").decode(p),c=JSON.parse(y);console.log("header : ",c);const d=c.points_length,u=c.field_length,r=c.fields,f=4+l,h=n.slice(f,f+d),g=new Float32Array(h);let m=new Float32Array(0);if(u>0){const b=f+d,S=n.slice(b,b+u);m=new Float32Array(S)}console.log("fieldData.length : ",m.length),console.log("points.length : ",g.length),console.log("fields : ",r),w.value&&(m.length>0?w.value.createPointCloud(g,r,m):w.value.createPointCloud(g,r)),console.log("finish create pcd time : ",new Date().getTime()),T(t,s)}async function I(e,t,s){const n=JSON.parse(e.data);console.log("Received JSON data:",n),D.value=n.data,T(t,s)}return P(()=>{L("video_stream","webcamera")}),R(()=>{if(o.value)for(const e in o.value)o.value[e]&&o.value[e]?.close()}),(e,t)=>(F(),V(E,null,[t[0]||(t[0]=a("h1",null,"test1",-1)),t[1]||(t[1]=a("video",{id:"myCam",width:"320",height:"240",autoplay:"",muted:""},null,-1)),t[2]||(t[2]=a("video",{id:"streamVideo",width:"320",height:"240",autoplay:"",controls:""},null,-1)),t[3]||(t[3]=a("canvas",{id:"videoCanvas",width:"1000",height:"100"},null,-1)),t[4]||(t[4]=a("img",{id:"imgTest",width:"1000",style:{"background-color":"black"}},null,-1)),t[5]||(t[5]=a("h1",null,"test1",-1)),a("div",null,O(j(D)),1),a("button",{onClick:C}),t[6]||(t[6]=a("h1",null,"test2",-1)),$(A,{ref_key:"viewer",ref:w},null,512)],64))}});export{z as default};
